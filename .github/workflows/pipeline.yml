name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest
      run: |
        pytest test.py
      
    - name: Docker Login
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      run: | 
        echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
        cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/
      
    - name: Build Image & Push
      env: 
        ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
      run: | 
        docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/python-gcp-cloud:latest .
        docker push ${{ secrets.ARTIFACT_REGISTRY }}/python-gcp-cloud:latest

  # DeployProd:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v3

  #     - name: Auth GCP Cloud Run
  #       env:
  #         GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  #       uses: 'google-github-actions/auth@v0'
  #       with:
  #         credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

  #     - name: Deploy to App Cloud Run
  #       id: deploy
  #       env: 
  #         ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
  #       uses: 'google-github-actions/deploy-cloudrun@v0'
  #       with:
  #         service: 'python-gcp-cloud'
  #         image: '${{ secrets.ARTIFACT_REGISTRY }}/python-gcp-cloud:latest'

  #     - name: Prod Test
  #       run: 'curl "${{ steps.deploy.outputs.url }}"'
